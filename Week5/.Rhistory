ylab("Mortor Vehicle Theft Rate")
dev.copy(png,"./plots/Heatmap Plot R.png")
dev.off()
(p <- ggplot(nba.m, aes(variable, Name)) + geom_tile(aes(fill = rescale), colour = "white") + scale_fill_gradient(low = "white", high = "steelblue"))
p + theme_grey(base_size = base_size) + labs(x = "", y = "") + scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
theme(axis.text.x=element_text(angle=90, hjust=0, vjust= 0.1)) +
theme(axis.text.y=element_text(hjust=0, vjust= 0.1)) +
ggtitle("2008 Basketball Player Statistics") +
xlab("Statistic") +
ylab("Basketball Player")
dev.copy(png,"./plots/Heatmap Plot R.png")
dev.off()
install.packages("leaflet")
library(leaflet)
m <- leaflet()
m <- addTiles(m)
m <- addMarkers(m, lng=costcodata$Longitude, lat=costcodata$Latitude, popup=costcodata$Address)
m
m <- leaflet()
m <- addTiles(m)
m <- addMarkers(m, lng=costcodata$Longitude, lat=costcodata$Latitude, popup=costcodata$Address+""+costcodata$City)
m
m <- leaflet()
m <- addTiles(m)
m <- addMarkers(m, lng=costcodata$Longitude, lat=costcodata$Latitude, popup=rbind(costcodata$Address,costcodata$City))
m
m <- leaflet()
m <- addTiles(m)
popupval <- costcodata$Address+" "+costcodata$City
m <- addMarkers(m, lng=costcodata$Longitude, lat=costcodata$Latitude, popup=popupval)
m
m <- leaflet()
m <- addTiles(m)
popupval <- rbind(costcodata$Address+" "+costcodata$City)
m <- addMarkers(m, lng=costcodata$Longitude, lat=costcodata$Latitude, popup=popupval)
m
m <- leaflet()
m <- addTiles(m)
m <- addMarkers(m, lng=costcodata$Longitude, lat=costcodata$Latitude, popup=costcodata$Address)
m
# Spatial charts
library(leaflet)
fun1 <- function(x, y) if (x == y) {x + y} else {y-x}
costcodata$faddr <- mapply(fun1, costcodata$Address, costcodata$City)
m <- leaflet()
m <- addTiles(m)
m <- addMarkers(m, lng=costcodata$Longitude, lat=costcodata$Latitude, popup=costcodata$faddr)
m
# Spatial charts
library(leaflet)
fun1 <- function(x, y) if (x == y) {x + y} else {y-x}
costcodata$faddr <- mapply(fun1, costcodata$Address, costcodata$City)
print(costcodata$faddr)
m <- leaflet()
m <- addTiles(m)
m <- addMarkers(m, lng=costcodata$Longitude, lat=costcodata$Latitude, popup=costcodata$faddr)
m
costcodata$faddr <- c(costcodata$Address, costcodata$City)
print(costcodata$faddr)
print(costcodata$Address)
costcodata$faddr <- paste(costcodata$Address, costcodata$City)
print(costcodata$faddr)
costcodata$faddr <- paste(costcodata$Address, costcodata$City, costcodata$State, costcodata$Zip.Code )
print(costcodata$faddr)
m <- leaflet()
m <- leaflet()
m <- addTiles(m)
m <- addMarkers(m, lng=costcodata$Longitude, lat=costcodata$Latitude, popup=costcodata$faddr)
m
library(htmlwidgets)
saveWidget(m, file="./plots/Spatial Map R.html")
saveWidget(m, file="/plots/Spatial Map R.html")
saveWidget(m, file="Spatial Map R.html")
saveWidget(m, file="./plots/Spatial Map R.html")
saveWidget(m, file="C://Users/aland/DSC640/Week5/Spatial Map R.html")
saveWidget(m, file="C://Users/aland/DSC640/Week5/plots/Spatial Map R.html")
# Transform data to long form
mtrx.melt <- melt(nba, id.vars = c("FGA", "PTS"), measure.vars = "FGP")
names(mtrx.melt) <- c("FGA", "PTS", "FGP")
# Return data to numeric form
mtrx.melt$wt <- as.numeric(str_sub(mtrx.melt$FGA, str_locate(mtrx.melt$FGA, "=")[1,1] + 1))
mtrx.melt$hp <- as.numeric(str_sub(mtrx.melt$PTS, str_locate(mtrx.melt$PTS, "=")[1,1] + 1))
head(mtrx.melt)
plot2 <- ggplot(mtrx.melt, aes(x = FGA, y = PTS, z = FGP)) +
stat_contour(geom = "polygon", aes(fill = ..level..)) +
geom_tile(aes(fill = qsec)) +
stat_contour(bins = 15) +
xlab("Weight (1,000lbs)") +
ylab("Horsepower") +
guides(fill = guide_colorbar(title = "¼ Mi. Time (s)"))
plt.show()
print(plot2)
plot2 <- ggplot(mtrx.melt, aes(x = FGA, y = PTS, z = FGP)) +
stat_contour(geom = "polygon", aes(fill = ..level..)) +
geom_tile(aes(fill = FGP)) +
stat_contour(bins = 15) +
xlab("Weight (1,000lbs)") +
ylab("Horsepower") +
guides(fill = guide_colorbar(title = "¼ Mi. Time (s)"))
print(plot2)
plot2 <- ggplot(mtrx.melt, aes(x = FGA, y = PTS, z = FGP)) +
stat_contour(geom = "polygon", aes(fill = ..level..)) +
geom_tile(aes(fill = FGP)) +
stat_contour(bins = 10) +
xlab("Weight (1,000lbs)") +
ylab("Horsepower") +
guides(fill = guide_colorbar(title = "¼ Mi. Time (s)"))
head(mtrx.melt)
plot2 <- ggplot(mtrx.melt, aes(x = FGA, y = PTS, z = FGP)) +
stat_contour(geom = "polygon", aes(fill = ..level..)) +
geom_tile(aes(fill = FGP)) +
stat_contour(bins = 10) +
xlab("Weight (1,000lbs)") +
ylab("Horsepower") +
guides(fill = guide_colorbar(title = "¼ Mi. Time (s)"))
m <- leaflet()
ggplot(mtrx.melt, aes(x = FGA, y = PTS, z = FGP, fill = FGP)) +
geom_raster(interpolate = T) + #interpolate for success
scale_fill_gradientn(colours = rainbow(10))
mtrx.melt <- melt(nba, id.vars = c("FGA", "PTS"), measure.vars = "FGP")
names(mtrx.melt) <- c("FGA", "PTS", "FGP")
# Return data to numeric form
mtrx.melt$FGA <- as.numeric(str_sub(mtrx.melt$FGA, str_locate(mtrx.melt$FGA, "=")[1,1] + 1))
mtrx.melt$PTS <- as.numeric(str_sub(mtrx.melt$PTS, str_locate(mtrx.melt$PTS, "=")[1,1] + 1))
head(mtrx.melt)
plot2 <- ggplot(mtrx.melt, aes(x = FGA, y = PTS, z = FGP)) +
stat_contour(geom = "polygon", aes(fill = ..level..)) +
geom_tile(aes(fill = FGP)) +
stat_contour(bins = 10) +
xlab("Weight (1,000lbs)") +
ylab("Horsepower") +
guides(fill = guide_colorbar(title = "¼ Mi. Time (s)"))
plot2 <- ggplot(mtrx.melt, aes(x = FGA, y = PTS, z = FGP)) +
stat_contour(geom = "polygon", aes(fill = ..level..)) +
geom_tile(aes(fill = FGP)) +
stat_contour(bins = 10) +
xlab("Weight (1,000lbs)") +
ylab("Horsepower") +
guides(fill = guide_colorbar(title = "¼ Mi. Time (s)"))
plot2 <- plot2 + geom_point()
print(plot2)
plot1 <- ggplot(mtrx.melt, aes(x = FGA, y = PTS, z = FGP)) +
stat_contour()
plot1 <- ggplot(mtrx.melt, aes(x = FGA, y = PTS, z = FGP))
plot1 <- ggplot(mtrx.melt, aes(x = FGA, y = PTS, z = FGP)) +
stat_contour()
head(mtrx.melt)
plot1 <- ggplot(mtrx.melt, aes(x = FGA, y = PTS, z = NA)) +
stat_contour()
plot1 <- ggplot(mtrx.melt, aes(x = FGA, y = PTS, z = NA)) +
stat_contour() +
geom_point()
dev.copy(png,"./plots/Motor Vehicle Theft Rate Scatter Plot R.png")
dev.off()
ggplot(nba, aes(x=FGA, y=PTS) ) +
geom_density_2d()
ggplot(nba, aes(x=FGA, y=PTS) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")
ggplot(nba, aes(x=FGA, y=PTS, z=FGA) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")
ggplot(nba, aes(x=FGA, y=PTS, z=FGP) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")
plot1 <- ggplot(mtrx.melt, aes(x = FGA, y = PTS, z = NA)) +
stat_contour() +
geom_point() +
stat_contour(bins = 10) +
xlab("Weight (1,000lbs)") +
ylab("Horsepower") +
guides(fill = guide_colorbar(title = "¼ Mi. Time (s)"))
dev.copy(png,"./plots/Contour Plot R.png")
dev.off()
plot1 <- ggplot(mtrx.melt, aes(x = FGA, y = PTS, z = NA)) +
stat_contour() +
geom_point() +
stat_contour(bins = 10) +
xlab("Weight (1,000lbs)") +
ylab("Horsepower") +
guides(fill = guide_colorbar(title = "¼ Mi. Time (s)"))
dev.copy(png,"./plots/Contour Plot R.png")
dev.off()
ggplot(nba, aes(x=FGA, y=PTS, z=FGP) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon") +
xlab("Weight (1,000lbs)") +
ylab("Horsepower") +
guides(fill = guide_colorbar(title = "¼ Mi. Time (s)"))
dev.copy(png,"./plots/Contour Plot R.png")
dev.off()
ggplot(nba, aes(x=FGA, y=PTS, z=FGP) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon") +
xlab("FGP") +
ylab("FGA") +
ggtitle("Contour Plot Basketball FGP Based on FGA and PTS")
dev.copy(png,"./plots/Contour Plot R.png")
dev.off()
ggplot(nba, aes(x=FGA, y=PTS, z=FGP) ) +
stat_density_2d(aes(fill = FGP), geom = "polygon") +
xlab("FGP") +
ylab("FGA") +
ggtitle("Contour Plot Basketball FGP Based on FGA and PTS")
dev.copy(png,"./plots/Contour Plot R.png")
dev.off()
ggplot(nba, aes(x=FGA, y=PTS, z=FGP) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon") +
xlab("FGP") +
ylab("FGA") +
ggtitle("Contour Plot Basketball FGP Based on FGA and PTS")
dev.copy(png,"./plots/Contour Plot R.png")
dev.off()
g <- ggplot(nba, aes(FGA, PTS))
g + geom_raster(aes(fill = density))
ggplot(nba, aes(x=FGA, y=PTS, z=FGP) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon") +
xlab("FGP") +
ylab("FGA") +
ggtitle("Contour Plot Basketball FGP Based on FGA and PTS")
dev.copy(png,"./plots/Contour Plot R.png")
dev.off()
ggplot(nba, aes(x=FGA, y=PTS) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon") +
xlab("FGP") +
ylab("FGA") +
ggtitle("Contour Plot Basketball FGP Based on FGA and PTS")
dev.copy(png,"./plots/Contour Plot R.png")
dev.off()
ggplot(nba, aes(x=FGA, y=PTS, color = factor(FGP)) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon") +
xlab("FGP") +
ylab("FGA") +
ggtitle("Contour Plot Basketball FGP Based on FGA and PTS")
dev.copy(png,"./plots/Contour Plot R.png")
dev.off()
ggplot(nba, aes(x=FGA, y=PTS, z=FGP) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon") +
xlab("FGP") +
ylab("FGA") +
ggtitle("Contour Plot Basketball FGP Based on FGA and PTS")
dev.copy(png,"./plots/Contour Plot R.png")
dev.off()
library(akima)
library(dplyr)
install.packages("akima")
library(akima)
interpdf <-interp2xyz(interp(x=nba$FGA, y=nba$PTS, z=nba$FGP, duplicate="mean"), data.frame=TRUE)
print(interpdf)
interpdf %>%
filter(!is.na(z)) %>%
tbl_df() %>%
ggplot(aes(x = x, y = y, z = z, fill = z)) +
geom_tile() +
geom_contour(color = "white", alpha = 0.05) +
scale_fill_distiller(palette="Spectral", na.value="white") +
theme_bw()
interpdf <-interp2xyz(interp(x=nba$FGA, y=nba$PTS, z=nba$FGP, duplicate="mean"), data.frame=TRUE)
print(interpdf)
interpdf %>%
filter(!is.na(z)) %>%
tbl_df() %>%
ggplot(aes(x = x, y = y, z = z, fill = z)) +
geom_tile() +
geom_contour(color = "white", alpha = 0.05) +
scale_fill_distiller(palette="blue", na.value="white") +
theme_bw()
interpdf <-interp2xyz(interp(x=nba$FGA, y=nba$PTS, z=nba$FGP, duplicate="mean"), data.frame=TRUE)
print(interpdf)
interpdf %>%
filter(!is.na(z)) %>%
tbl_df() %>%
ggplot(aes(x = x, y = y, z = z, fill = z)) +
geom_tile() +
geom_contour(color = "white", alpha = 0.05) +
scale_fill_distiller(palette="blues", na.value="white") +
theme_bw()
interpdf <-interp2xyz(interp(x=nba$FGA, y=nba$PTS, z=nba$FGP, duplicate="mean"), data.frame=TRUE)
print(interpdf)
interpdf %>%
filter(!is.na(z)) %>%
tbl_df() %>%
ggplot(aes(x = x, y = y, z = z, fill = z)) +
geom_tile() +
geom_contour(color = "white", alpha = 0.05) +
scale_fill_distiller(palette="Blues", na.value="white") +
theme_bw()
interpdf <-interp2xyz(interp(x=nba$FGA, y=nba$PTS, z=nba$FGP, duplicate="mean"), data.frame=TRUE)
print(interpdf)
interpdf %>%
filter(!is.na(z)) %>%
tbl_df() %>%
ggplot(aes(x = x, y = y, z = z, fill = z)) +
geom_tile() +
geom_contour(color = "red", alpha = 0.05) +
scale_fill_distiller(palette="Blues", na.value="white") +
theme_bw()
v <- ggplot(nba, aes(FGA, PTS, z = FGP))
v + geom_contour()
nba
v <- ggplot(nba, aes(FGA, PTS, z = FGP))
v + geom_contour()
ggplot(nba, aes(x=FGA, y=PTS, z=FGP) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon") +
xlab("FGP") +
ylab("FGA") +
ggtitle("Contour Plot Basketball FGP Based on FGA and PTS")
dev.copy(png,"./plots/Contour Plot R.png")
dev.off()
library(ggplot2)
library(akima)
library(dplyr)
interpdf <-interp2xyz(interp(x=nba$FGA, y=nba$PTS, z=nba$FGP, duplicate="mean"), data.frame=TRUE)
print(interpdf)
interpdf %>%
filter(!is.na(z)) %>%
tbl_df() %>%
ggplot(aes(x = x, y = y, z = z, fill = z)) +
geom_tile() +
geom_contour(color = "white", alpha = 0.05) +
scale_fill_distiller(palette="Blues", na.value="white") +
theme_bw()
plot1 <- ggplot(mtrx.melt, aes(x = FGA, y = PTS, z = NA)) +
stat_contour() +
geom_point() +
stat_contour(bins = 10) +
xlab("Weight (1,000lbs)") +
ylab("Horsepower") +
guides(fill = guide_colorbar(title = "¼ Mi. Time (s)"))
dev.copy(png,"./plots/Contour Plot R.png")
dev.off()
ggplot(nba, aes(x=FGA, y=PTS, z=FGP) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon") +
xlab("FGP") +
ylab("FGA") +
ggtitle("Contour Plot Basketball FGP Based on FGA and PTS")
dev.copy(png,"./plots/Contour Plot R.png")
dev.off()
interpdf <-interp2xyz(interp(x=nba$FGA, y=nba$PTS, z=nba$FGP, duplicate="mean"), data.frame=TRUE)
print(interpdf)
interpdf %>%
filter(!is.na(z)) %>%
tbl_df() %>%
ggplot(aes(x = x, y = y, z = z, fill = z)) +
geom_tile() +
geom_contour(color = "white", alpha = 0.05) +
scale_fill_distiller(palette="Blues", na.value="white") +
theme_bw()
ggplot(nba, aes(x=FGA, y=PTS, z=FGP) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon") +
xlab("FGP") +
ylab("FGA") +
ggtitle("Contour Plot Basketball FGP Based on FGA and PTS")
dev.copy(png,"./plots/Contour Plot R.png")
dev.off()
library(ggplot2)
library(akima)
library(dplyr)
interpdf <-interp2xyz(interp(x=nba$FGA, y=nba$PTS, z=nba$FGP, duplicate="mean"), data.frame=TRUE)
print(interpdf)
interpdf %>%
filter(!is.na(z)) %>%
tbl_df() %>%
ggplot(aes(x = x, y = y, z = z, fill = z)) +
geom_tile() +
geom_contour(color = "white", alpha = 0.05) +
scale_fill_distiller(palette="Blues", na.value="white") +
theme_bw()
ggplot(nba, aes(x=FGA, y=PTS, z=FGP) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon") +
xlab("FGP") +
ylab("FGA") +
ggtitle("Contour Plot Basketball FGP Based on FGA and PTS")
dev.copy(png,"./plots/Contour Plot R.png")
dev.off()
ggplot(nba, aes(x=FGA, y=PTS, z=FGP) ) +
stat_density2d(aes(fill = ..level..), geom = "polygon") +
xlab("FGP") +
ylab("FGA") +
ggtitle("Contour Plot Basketball FGP Based on FGA and PTS")
dev.copy(png,"./plots/Contour Plot R.png")
dev.off()
ggplot(nba, aes(x=FGA, y=PTS, fill=FGP) ) +
stat_density2d(aes(fill = ..level..), geom = "polygon") +
xlab("FGP") +
ylab("FGA") +
ggtitle("Contour Plot Basketball FGP Based on FGA and PTS")
dev.copy(png,"./plots/Contour Plot R.png")
dev.off()
ggplot(nba, aes(x=FGA, y=PTS, fill=FGP, z=FGP) ) +
stat_density2d(aes(fill = ..level..), geom = "polygon") +
xlab("FGP") +
ylab("FGA") +
ggtitle("Contour Plot Basketball FGP Based on FGA and PTS")
dev.copy(png,"./plots/Contour Plot R.png")
dev.off()
ggplot(iris, aes(x=Petal.Width, y=Petal.Length, fill=Sepal.Width)) +
stat_density2d(geom="polygon", aes(fill=..level..))
iris
ggplot(nba, aes(x=FGA, y=PTS, fill=FGP, z=FGP) ) +
stat_density2d(aes(fill = ..level..), geom = "polygon")
ggplot(nba, aes(x=FGA, y=PTS, fill=FGP, z=FGP) ) +
stat_density2d(aes(fill = ..level..), geom = "polygon") +
xlab("FGP") +
ylab("FGA") +
ggtitle("Contour Plot Basketball FGP Based on FGA and PTS")
dev.copy(png,"./plots/Contour Plot R.png")
dev.off()
library(reshape2) # for melt
nba3d <- melt(nba)
names(nba3d) <- c("FGA", "PTS", "FGP")
# Basic plot
ggplot(nba, aes(x=FGA, y=PTS, fill=FGP, z=FGP) ) +
stat_contour(geom="polygon", aes(fill=..level..))
nba3d <- melt(nba)
names(nba3d) <- c("FGA", "PTS", "FGP")
ggplot(nba3d, aes(x=FGA, y=PTS, fill=FGP, z=FGP) ) +
stat_contour(geom="polygon", aes(fill=..level..))
ggplot(nba, aes(x=FGA, y=PTS, fill=FGP, z=FGP) ) +
stat_density2d(aes(fill = ..level..), geom = "polygon") +
xlab("FGP") +
ylab("FGA") +
ggtitle("Contour Plot Basketball FGP Based on FGA and PTS")
dev.copy(png,"./plots/Contour Plot R.png")
dev.off()
ggplot(nba3d, aes(x=FGA, y=PTS, fill=FGP, z=FGP) ) +
stat_contour(geom="polygon", aes(fill=..level..))
library(ggplot2)
library(akima)
library(dplyr)
interpdf <-interp2xyz(interp(x=nba$FGA, y=nba$PTS, z=nba$FGP, duplicate="mean"), data.frame=TRUE)
print(interpdf)
interpdf %>%
filter(!is.na(z)) %>%
tbl_df() %>%
ggplot(aes(x = x, y = y, z = z, fill = z)) +
geom_tile() +
geom_contour(color = "white", alpha = 0.05) +
scale_fill_distiller(palette="Blues", na.value="white") +
theme_bw()
library(ggplot2)
library(akima)
library(dplyr)
interpdf <-interp2xyz(interp(x=nba$FGA, y=nba$PTS, z=nba$FGP, duplicate="mean"), data.frame=TRUE)
print(interpdf)
interpdf %>%
filter(!is.na(z)) %>%
tbl_df() %>%
ggplot(aes(x = x, y = y, z = z, fill = z)) +
geom_tile() +
geom_contour(color = "white", alpha = 0.05) +
scale_fill_distiller(palette="Blues", na.value="white") +
theme_bw() +
xlab("FGP") +
ylab("FGA") +
ggtitle("Contour Plot Basketball FGP Based on FGA and PTS")
dev.copy(png,"./plots/Contour Plot R.png")
dev.off()
library(ggplot2)
library(akima)
library(dplyr)
interpdf <-interp2xyz(interp(x=nba$FGA, y=nba$PTS, z=nba$FGP, duplicate="mean"), data.frame=TRUE)
print(interpdf)
interpdf %>%
filter(!is.na(z)) %>%
tbl_df() %>%
ggplot(aes(x = x, y = y, z = z, fill = z)) +
geom_tile() +
geom_contour(color = "white", alpha = 0.05) +
scale_fill_distiller(palette="Blues", na.value="white") +
theme_bw() +
xlab("FGP") +
ylab("FGA") +
ggtitle("Contour Plot Basketball FGP Based on FGA and PTS") +
guides(fill=guide_legend(title="FGP"))
dev.copy(png,"./plots/Contour Plot R.png")
dev.off()
library(ggplot2)
library(akima)
library(dplyr)
interpdf <-interp2xyz(interp(x=nba$FGA, y=nba$PTS, z=nba$FGP, duplicate="mean"), data.frame=TRUE)
print(interpdf)
interpdf %>%
filter(!is.na(z)) %>%
tbl_df() %>%
ggplot(aes(x = x, y = y, z = z, fill = z)) +
geom_tile() +
geom_contour(color = "white", alpha = 0.05) +
scale_fill_distiller(palette="Blues", na.value="white") +
theme_bw() +
xlab("PTS") +
ylab("FGA") +
ggtitle("Contour Plot Basketball FGP Based on FGA and PTS") +
guides(fill=guide_legend(title="FGP"))
dev.copy(png,"./plots/Contour Plot R.png")
dev.off()
# Contour chart
library(ggplot2)
library(akima)
library(dplyr)
interpdf <-interp2xyz(interp(x=nba$FGA, y=nba$PTS, z=nba$FGP, duplicate="mean"), data.frame=TRUE)
print(interpdf)
interpdf %>%
filter(!is.na(z)) %>%
tbl_df() %>%
ggplot(aes(x = x, y = y, z = z, fill = z)) +
geom_tile() +
geom_contour(color = "white", alpha = 0.05) +
scale_fill_distiller(palette="Blues", na.value="white") +
theme_bw() +
xlab("PTS") +
ylab("FGA") +
ggtitle("Basketball FGP Based on FGA and PTS Contour Plot") +
guides(fill=guide_legend(title="FGP"))
dev.copy(png,"./plots/Contour Plot R.png")
dev.off()
